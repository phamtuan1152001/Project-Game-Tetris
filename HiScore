package gameTetris;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.BevelBorder;
import javax.swing.border.EtchedBorder;
import javax.xml.stream.XMLEventFactory;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLEventWriter;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.events.Characters;
import javax.xml.stream.events.EndElement;
import javax.xml.stream.events.StartDocument;
import javax.xml.stream.events.StartElement;
import javax.xml.stream.events.XMLEvent;

public class HiScore {
  private JPanel tableScore;
	private JPanel row1;
	private JPanel row2;
	private JLabel textRow1;
	private JPanel [][]panelRow2;
	private String []nguoichoi;
	private String []diem;
	private static final JLabel xephang = new JLabel("Rank");
	private static final JLabel ten = new JLabel("Name of Player");
	private static final JLabel diem1 = new JLabel("Score");
  
  public void SapXep(){
		for(int i=0;i<5-1;i++){
			for(int j=i+1;j<5;j++){
				int temi = Integer.parseInt(diem[i]);
				int temj = Integer.parseInt(diem[j]);
				if(temi<temj){
					String ten = nguoichoi[i];nguoichoi[i]=nguoichoi[j];nguoichoi[j]=ten;
					String di = diem[i];diem[i]=diem[j];diem[j]=di;
				}
			}
		}
	}
}

public HiScore(){
		try{
			XMLInputFactory inputFactory = XMLInputFactory.newInstance();
			InputStream in = new FileInputStream("hiscore.xml");
			XMLEventReader eventReader = inputFactory.createXMLEventReader(in);
			nguoichoi = new String[5];
			diem = new String[5];
			int i=0,j=0;
			while(eventReader.hasNext()){
				XMLEvent event = eventReader.nextEvent();
				if(event.isStartElement()){
					if(event.asStartElement().getName().getLocalPart().equals("nguoichoi")){
						event = eventReader.nextEvent();
						String s = event.asCharacters().toString();
						nguoichoi[i]=s;
						i++;
						continue;
					}
					else if(event.asStartElement().getName().getLocalPart().equals("diem")){
						event = eventReader.nextEvent();
						String s = event.asCharacters().toString();
						diem[j]=s;
						j++;
						continue;
					}
				}
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		SapXep();
	}
	public String[] getNguoichoi(){
		return nguoichoi;
	}
	public String[] getDiem(){
		return diem;
	}
public void write_XML(String file) throws Exception, XMLStreamException{
		XMLOutputFactory outputFactory = XMLOutputFactory.newInstance();
		XMLEventWriter eventWriter = outputFactory.createXMLEventWriter(new FileOutputStream(file));
		XMLEventFactory eventFactory = XMLEventFactory.newInstance();
		XMLEvent end = eventFactory.createDTD("\n");
		StartDocument startDocument = eventFactory.createStartDocument();
		eventWriter.add(startDocument);
		eventWriter.add(end);
		
		StartElement configStarElement = eventFactory.createStartElement("","","score");
		eventWriter.add(configStarElement);
		eventWriter.add(end);
		XMLEvent tab = eventFactory.createDTD("\t");
                for(int i=0;i<5;i++){
			eventWriter.add(tab);
			eventWriter.add(eventFactory.createStartElement("","","item"));
			eventWriter.add(end);
			createNode(eventWriter,"nguoichoi",nguoichoi[i]);
			createNode(eventWriter,"diem",diem[i]);
			eventWriter.add(tab);
			eventWriter.add(eventFactory.createEndElement("","","item"));
			eventWriter.add(end);
		}
                eventWriter.add(eventFactory.createEndElement("","","score"));
		eventWriter.add(end);
		eventWriter.add(eventFactory.createEndDocument());
		eventWriter.close();	
}
	
